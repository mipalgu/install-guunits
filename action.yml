name: Install guunits
description: Installs guunits in standard paths on the system

runs:
  using: 'composite'

  steps:
    - name: Clone guunits
      uses: actions/checkout@v2
      with:
          repository: mipalgu/guunits
          path: guunits

    - name: Install guunits
      if: ${{ runner.os == 'Windows' }}
      run: |
          cd guunits/guunits
          cmake -B .build
          cmake --build .build --config Release
          cmake --install .build
      shell: pwsh

    - name: Install guunits
      if: ${{ runner.os == 'Linux' }}
      run: |
          cd guunits/guunits
          cmake -B .build
          cmake --build .build --config Release
          sudo cmake --install .build
      shell: bash

    - name: Install guunits
      if: ${{ runner.os == 'macOS' }}
      run: |
          cd guunits/guunits
          cmake -B .build
          cmake --build .build --config Release
          cmake --install .build
      shell: bash

    - name: Add Environment Variables
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      run: |
        export PKG_CONFIG_PATH = "/usr/local/lib/pkgConfig:$PKG_CONFIG_PATH"
        export LIB = "/usr/local/lib:$LIB"
        export LIBPATH = "/usr/local/lib:$LIBPATH"
        export LIBRARY_PATH = "/usr/local/lib:$LIBRARY_PATH"
        export LD_LIBRARY_PATH = "/usr/local/lib:$LD_LIBRARY_PATH"
        export INCLUDE = "/usr/local/include:$INCLUDE"
        export IFCPATH = "/usr/local/include:$IFCPATH"
        export CPATH = "/usr/local/include:$CPATH"
        echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo "INCLUDE=$INCLUDE" >> $GITHUB_ENV
        echo "CPATH=$CPATH" >> $GITHUB_ENV
        echo "IFCPATH=$IFCPATH" >> $GITHUB_ENV
        echo "LIB=$LIB" >> $GITHUB_ENV
        echo "LIBPATH=$LIBPATH" >> $GITHUB_ENV
        echo "LIBRARY_PATH=$LIBRARY_PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV
      shell: bash

    - name: Add Environment Variables
      if: ${{ runner.os == 'Windows' }}
      run: |
        $env:PKG_CONFIG_PATH = "C:/Program Files (x86)/guunits/lib/pkgConfig;" + $env:PKG_CONFIG_PATH
        $env:LIB = "C:/Program Files (x86)/guunits/lib;" + $env:LIB
        $env:LIBPATH = "C:/Program Files (x86)/guunits/lib;" + $env:LIBPATH
        $env:LIBRARY_PATH = "C:/Program Files (x86)/guunits/lib;" + $env:LIBRARY_PATH
        $env:INCLUDE = "C:/Program Files (x86)/guunits/include;" + $env:INCLUDE
        $env:IFCPATH = "C:/Program Files (x86)/guunits/include;" + $env:IFCPATH
        $env:CPATH = "C:/Program Files (x86)/guunits/include;" + $env:CPATH
        echo "PKG_CONFIG_PATH=$env:PKG_CONFIG_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "INCLUDE=$env:INCLUDE" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CPATH=$env:CPATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "IFCPATH=$env:IFCPATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LIB=$env:LIB" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LIBPATH=$env:LIBPATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LIBRARY_PATH=$env:LIBRARY_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: pwsh
